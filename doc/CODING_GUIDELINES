--  CODING GUIDELINES for the PolyORB project

--  $Id$

The Ada 95 Quality & Style Guide is included by reference.

Code layout should follow the usual GNAT practice.

Every package that can be declared Pure shall, then:
every package that can be Preelaborate shall, then:
every package that can have an Elaborate_Body pragma shall, then:
every package that cannot or need not have any of the above shall
have a comment that explains why.

Each file should start with the standard PolyORB copyright header,
then a blank line, then a comment that documents its purpose, followed
by a blank line, followed by a comment containing the repository id
(filled automatically by the SCM system). The PolyORB copyright header
might be adapted for copyrighted specs or code from third party.

If a package body needs to explcitly execute some code for its
initialization, this MUST NOT be done in the elaboration code.
Instead, a parameterless procedure Initialize must be declared
containing the necessary initialization code, and this procedure
should be registered with the intialization procedure,
PolyORB.Initialization.

Direct use of tasking runtime or any constructs that would drag
tasking in its dependencies is explicitly prohibited.  All concurrent
programming is to be performed using PolyORB.Tasking.* API.

No dependencies on personnality specific code are allowed
anywhere except in units implementing this specific personality.

All the code shall be compiled with pragma Ravenscar; except for code
dedicated to very specific functions such as concurrent constructions.
This should be clearly indicated in package name and source code.

The code shall not produce warnings when compiled with -gnatwa -gnaty.
Any use of pragma Warnings (Off) shall be documented by a comment.

When necessary, tag the code with
- 'XXX' to indicate dubious code.

- 'WAG:Y.ZZ' to indicate constructions used to work around a behavior
  in GNAT version Y.ZZ.

- 'Implementation note:' to indicate modifications to a 'should be'
  implementation to work around specific problems.

Whenever possible, do not add new exceptions and exception handlers to
PolyORB's neutral core and protocol personalities. Instead, use error
handling mechanisms provided by PolyORB.Exceptions.

Header box should be up to date whenever necessary:

- Copyright date information is either 
  - x where x is year of file's creation
  - y - z where y is year of file's creation and z is year of last modification

- Some packages require specific adjustements to take into account
  references to specifications (e.g. CORBA related packages) or other
  projects (e.g. AWS)
