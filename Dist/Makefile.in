# Makefile.in generated automatically by automake 1.2 from Makefile.am

# Copyright (C) 1994, 1995, 1996, 1997 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.


SHELL = /bin/sh
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = true
PRE_INSTALL = true
POST_INSTALL = true
NORMAL_UNINSTALL = true
PRE_UNINSTALL = true
POST_UNINSTALL = true
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
AWK = @AWK@
CC = @CC@
EXEEXT = @EXEEXT@
EXTRA_LIBS = @EXTRA_LIBS@
GNAT_SOURCE = @GNAT_SOURCE@
LAUNCHINGOBJECTS = @LAUNCHINGOBJECTS@
LAUNCHINGSOURCES = @LAUNCHINGSOURCES@
LAUNCHING_INCLUDED = @LAUNCHING_INCLUDED@
MAKEINFO = @MAKEINFO@
PACKAGE = @PACKAGE@
PLATFORM_SPECIFIC = @PLATFORM_SPECIFIC@
PROTOCOLSOBJECTS = @PROTOCOLSOBJECTS@
PROTOCOLSSOURCES = @PROTOCOLSSOURCES@
RANLIB = @RANLIB@
SED = @SED@
SUPPORTS_LOCAL_LAUNCH = @SUPPORTS_LOCAL_LAUNCH@
TAR = @TAR@
TCP_INCLUDED = @TCP_INCLUDED@
UNZIP = @UNZIP@
VERSION = @VERSION@

AUTOMAKE_OPTIONS = no-dependencies foreign

GNATSRC = @GNAT_SOURCE@
GARLIC = ${libdir}/garlic
GNATFLAGS = -gnatpg @GNATFLAGS@
RSH = @RSH@
srcdir = @srcdir@

bin_PROGRAMS = gnatdist
gnatdist_DEPENDENCIES = xe_defs.o sdefault.o
gnatdist_SOURCES =
gnatdist_LDADD =

GNATMAKE = gnatmake

CLEANFILES = *.ali gnatdist$(EXEEXT) xe_defs.adb sdefault.adb
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) 
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
gnatdist_OBJECTS = 
gnatdist_LDFLAGS = 
DIST_COMMON =  ChangeLog Makefile.am Makefile.in TODO


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

GZIP = --best
SOURCES = $(gnatdist_SOURCES)
OBJECTS = $(gnatdist_OBJECTS)

default: all

.SUFFIXES:
.SUFFIXES: .c .o
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --foreign Dist/Makefile

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $$p $$p$(EXEEXT); \
	done

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "  $(INSTALL_PROGRAM) $$p$(EXEEXT) $(bindir)/`echo $$p|sed '$(transform)'`$(EXEEXT)"; \
	     $(INSTALL_PROGRAM) $$p$(EXEEXT) $(bindir)/`echo $$p|sed '$(transform)'`$(EXEEXT); \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(bindir)/`echo $$p|sed '$(transform)'`$(EXEEXT); \
	done

.c.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	rm -f *.o core

clean-compile:

distclean-compile:
	rm -f *.tab.c

maintainer-clean-compile:

tags: TAGS

ID: $(HEADERS) $(SOURCES)
	here=`pwd` && cd $(srcdir) && mkid -f$$here/ID $(SOURCES) $(HEADERS)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES)
	tags=; \
	here=`pwd`; \
	test -z "$(ETAGS_ARGS)$(SOURCES)$(HEADERS)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $(SOURCES) $(HEADERS) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = Dist

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  test -f $(distdir)/$$file \
	  || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $$d/$$file $(distdir)/$$file; \
	done
info:
dvi:
check: all
	$(MAKE)
installcheck:
install-exec: install-binPROGRAMS
	@$(NORMAL_INSTALL)

install-data: 
	@$(NORMAL_INSTALL)

install: install-exec install-data all
	@:

uninstall: uninstall-binPROGRAMS

all: Makefile $(PROGRAMS)

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' INSTALL_SCRIPT='$(INSTALL_PROGRAM)' install
installdirs:
	$(mkinstalldirs)  $(bindir)


mostlyclean-generic:
	test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	rm -f Makefile $(DISTCLEANFILES)
	rm -f config.cache config.log stamp-h stamp-h[0-9]*
	test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
	test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-tags mostlyclean-generic

clean:  clean-binPROGRAMS clean-compile clean-tags clean-generic \
		mostlyclean

distclean:  distclean-binPROGRAMS distclean-compile distclean-tags \
		distclean-generic clean
	rm -f config.status

maintainer-clean:  maintainer-clean-binPROGRAMS maintainer-clean-compile \
		maintainer-clean-tags maintainer-clean-generic \
		distclean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

.PHONY: default mostlyclean-binPROGRAMS distclean-binPROGRAMS \
clean-binPROGRAMS maintainer-clean-binPROGRAMS uninstall-binPROGRAMS \
install-binPROGRAMS mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info dvi installcheck \
install-exec install-data install uninstall all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


force: 

gnatdist: ${gnatdist_DEPENDENCIES} force
	${GNATMAKE} -m -a ${GNATFLAGS} -I. -I${srcdir} -I${GNATSRC} \
	   ${srcdir}/xe_build.adb -o gnatdist$(EXEEXT)

xe_defs.adb: Makefile
	@echo Generating xe_defs.adb
	@echo "package body XE_Defs is" >xe_defs.adb
	@echo "   GARLIC_Dir : aliased constant String" >>xe_defs.adb
	@echo "      := \"${GARLIC}\";" >>xe_defs.adb
	@for i in GARLIC; do \
		echo "   function Get_"$$i"_Dir return String_Access is"; \
		echo "   begin"; \
		echo "      return new String'("$$i"_Dir);"; \
		echo "   end Get_"$$i"_Dir;"; \
	done >> xe_defs.adb
	@echo "   function Get_Rsh_Command return String is" >>xe_defs.adb
	@echo "   begin" >>xe_defs.adb
	@echo "      return \"${RSH}\";" >>xe_defs.adb
	@echo "   end Get_Rsh_Command;" >>xe_defs.adb
	@echo "end XE_Defs;" >>xe_defs.adb

xe_defs.o: xe_defs.ads xe_defs.adb
	${CC} -c -g -O2 -gnatp -I${srcdir} -I${GNATSRC} xe_defs.adb

sdefault.adb: ${srcdir}/config.sdefault
	@if [ -f ${GNATSRC}/sdefault.adb ]; then \
	  echo Copying sdefault.adb; \
	  cp ${GNATSRC}/sdefault.adb .; else \
	  echo Generating sdefault.adb; \
	  ${SHELL} ${srcdir}/config.sdefault; fi

sdefault.o: sdefault.adb ${GNATSRC}/sdefault.ads
	${CC} -c -g -O2 -gnatp -I${GNATSRC} sdefault.adb

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
