------------------------------------------------------------------------------
--                                                                          --
--                   GNAT DISTRIBUTED SYSTEMS ANNEX DOCUMENTS               --
--                                                                          --
--                                I N T R O                                 --
--                                                                          --
--                            $Revision$                              --
--                                                                          --
-- GLADE is  free software;  you  can  redistribute  it  and/or  modify  it --
-- under terms of the  GNU General Public License  as published by the Free --
-- Software  Foundation;  either version 2,  or  (at your option) any later --
-- version. GLADE is distributed in the  hope that  it will  be useful, but --
-- WITHOUT ANY WARRANTY;  without even the implied warranty of MERCHANTABI- --
-- LITY or FITNESS  FOR A PARTICULAR PURPOSE.  See the  GNU General  Public --
-- License  for more details.  You should  have received a copy of the  GNU --
-- General  Public  License distributed with  GLADE; see  file COPYING.  If --
-- not, write to the Free Software Foundation, 59 Temple Place - Suite 330, --
-- Boston, MA 02111-1307, USA.                                              --
--                                                                          --
--                GLADE is maintained by ACT Europe.                        --
--            (email:distribution@act-europe.gnat.com).                     --
--                                                                          --
------------------------------------------------------------------------------

This is release @glade_version@ of the Ada 95 distributed systems annex
for GNAT @gnat_version@.

Contents.
---------
   Introduction: Ada 95 & Distributed Systems.
   Installation, Documentation & Examples.
   What Does It Run on.
   Downloading Glade.
   Commercial Support.
   Bug Reports & Technical Questions.
   Submitting Bug Fixes.
   Glade Development Team.
   Thanks.
------------------------------------------------------------------------------ 

Introduction: Ada 95 & Distributed Systems.
-------------------------------------------

Ada 95 is the first general-purpose language to provide a standard
distributed programming paradigm. By combining the distributed and
object-oriented features of Ada 95, it is possible to create an
application where objects are physically distributed over a network of
machines, without having to interface to any low-level communication
layer.  Likewise, by combining the distributed and real-time
capabilities of Ada 95, it is possible to design applications which
meet real-time constraints in a distributed environment.

The Distributed Systems Annex (called Glade) for GNAT is an environment for
developing distributed applications based on Annex E of the Ada 95
Reference Manual. This environment comprises:

     - a complete PCS (Partition Communication System)
     - a simple partition description language & tool
     - utilities to build and start distributed applications

The caller and receiver stubs needed by the PCS are generated by the
GNAT compiler using special flags. The partitioning tool is
responsible for calling GNAT with the appropriate flags.

Installation, Documentation & Examples.
---------------------------------------

To see how to install the system please read file INSTALL in this
directory. Please look under the "Doc" directory for documentation on
how to use Glade (user_guide.txt). Directory "Examples" contains
several examples on how to program a distributed application in Ada 95.

What Does It Run on.
--------------------

This release works on:

  - Sparc/Solaris (2.3 and above)
  - PC/Linux.

This release also works on the following machines although less efficiently:

  - Sparc/SunOS (4.1.3)
    [NOTE: Sometimes termination does not work on SunOS due to a bug in the
     pthreads library. If this happens, you will have to kill the
     partitions by hand (using the kill(1) command).]

Versions on SGI/Irix, DEC/OSF, HP/HP-UX, Windows NT will be available
in the near future.

Downloading Glade.
------------------

You can download Glade by anonymous ftp from cs.nyu.edu (cd
pub/gnat/dsa) and the usual GNAT mirror sites around the world.

Commercial Support.
-------------------

Commercial support for Glade will be available from Ada Core
Technologies and ACT-Europe. Contact support@gnat.com or
support@act-europe.gnat.com for further details.

Bug Reports & Technical Questions.
----------------------------------

Bug reports or technical questions pertaining to the implementation of
the distribution annex should be sent to:

		   distribution@act-europe.gnat.com

Bug reports and technical queries regarding GNAT itself should be
addressed to "report@gnat.com" following the usual reporting
procedures.

Please put one bug per email message, and add a short but specific
subject (a general subject like "Distribution bug" is not so useful, a
title like "bad exception propagation across partition" is more
useful).

Please include full sources. We can't duplicate errors without the
full sources. Include all sources in the single e-mail message with
appropriate indications in the multiple file cases, see below.

Please send all sources in plain ASCII form, we can't process
compressed, uuencoded, etc. messages in our current form (they have to
go through extra steps, and easily get lost, separated from the author
etc during this process).

Please include COMPLETE identification of the version of the system
you are running.

To be maximally helpful, for a report that contains multiple separate
compilation units, and hence multiple files, submit them in the form
of a single file that is acceptable input to gnatchop (used to be
called gnatsplit on versions of GNAT prior to 1.80), i.e. contains no
non-Ada text. If you use banners to separate the files, make sure they
are composed entirely of blank lines or Ada comments.

If you want to be maximally helpful, try to reduce your example to a
simple one but DON'T spend too much time doing this.

If a bug involves incorrect operation of the generated code, then the
first thing the program should do is to output a line indicating the
expected output or behavior. If at all possible, do a test later on
that prints out "passed" or "failed" depending on the behavior. Of
course it may not always be possible to structure a test this way, but
that's the most convenient form (for obvious reasons!)

When we receive a bug report, we take a preliminary look to categorize
it into one of the following:

   1.  Pilot error, documentation problems, installation problems etc.

   2.  Interesting comment, suggestion etc, but not a bug

   3.  Bug that we already know about

   4.  Bug that is already fixed in our development version

   5.  Obvious bug that we correct immediately in our development version

   6.  Real genuine new unfixed bug.

In the first 5 cases, you will get a message telling you the
status. In the 6th case only, we assign a bug tracking number of the
form mmdd-nnn, where mmdd is the date of receipt, and nnn is a serial
number. In this case, the release notes will tell you what the status
of the bug is, and also we will send you a message when it is fixed.

Submitting Bug Fixes.
---------------------

If you find a bug and would like to submit fixes, please do so indicating
what release you use. We accept patch files. To produce such a patch
file, put your files in the directory PCS and our files in the directory
PCS.orig, and use the following command:

  diff --recursive --context PCS.orig PCS > patch_file

and send us the patch_file via E-mail at the address above.

If your diff version do not understand the --recursive or --context
option, please use the GNU diffutils package which may be found on any
GNU archive (e.g. ftp://ftp.ibp.fr/pub/gnu/).

Glade Development Team.
-----------------------

Glade has been jointly developed by Ada Core Technologies and a
research team from the Ecole Nat. Sup. de Telecommunication (Paris &
Brittany). The ENST team comprises:
  Yvon Kermarrec (yvon.kermarrec@enst-bretagne.fr),
  Laurent Nana   (Laurent.Nana@enst-bretagne.fr),
  Laurent Pautet (pautet@inf.enst.fr),
  Samuel Tardieu (sam@inf.enst.fr).

Thanks.
-------

We are especially grateful to Anthony Gargaro (CSC) for encouragement
to develop the Distributed Systems Annex for GNAT. We also thank the
ARMADA team (Uppsla Univ.) for their contributions, Alfred Strohmeier
(EPFL) for his constant support and the ADEPT team at TAMU for intense
brain storming discussions.

