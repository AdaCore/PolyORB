------------------------------------------------------------------------------
--                                                                          --
--                           POLYORB COMPONENTS                             --
--                                                                          --
--                               C O M M O N                                --
--                                                                          --
--                                 P r o j                                  --
--                                                                          --
--           Copyright (C) 2007, Free Software Foundation, Inc.             --
--                                                                          --
-- PolyORB is free software; you  can  redistribute  it and/or modify it    --
-- under terms of the  GNU General Public License as published by the  Free --
-- Software Foundation;  either version 2,  or (at your option)  any  later --
-- version. PolyORB is distributed  in the hope that it will be  useful,    --
-- but WITHOUT ANY WARRANTY;  without even the implied warranty of MERCHAN- --
-- TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public --
-- License  for more details.  You should have received  a copy of the GNU  --
-- General Public License distributed with PolyORB; see file COPYING. If    --
-- not, write to the Free Software Foundation, 51 Franklin Street, Fifth    --
-- Floor, Boston, MA 02111-1301, USA.                                       --
--                                                                          --
-- As a special exception,  if other files  instantiate  generics from this --
-- unit, or you link  this unit with other files  to produce an executable, --
-- this  unit  does not  by itself cause  the resulting  executable  to  be --
-- covered  by the  GNU  General  Public  License.  This exception does not --
-- however invalidate  any other reasons why  the executable file  might be --
-- covered by the  GNU Public License.                                      --
--                                                                          --
--                  PolyORB is maintained by AdaCore                        --
--                     (email: sales@adacore.com)                           --
--                                                                          --
------------------------------------------------------------------------------

with "config";
project Common is

   type Build_Type is ("PRODUCTION", "DEBUG");
   Build : Build_Type := external ("Build", "PRODUCTION");

   for Source_Files use ();

   Root_Build_Dir := Config.Top_Build_Dir;
   --  Used to define Build_Dir below and ALI dir for all importing projects

   Build_Dir := Root_Build_Dir & "projects/";
   --  Used to set source and object dirs of importing projects

   Root_Source_Dir := Config.Top_Source_Dir;
   --  Used to define Source_Dir below

   Source_Dir := Root_Source_Dir & "projects/";
   --  Used to set source dir of importing projects. For projects defined as
   --  *.gpr (most of them), we use:
   --     for Source_Dirs use (Common.Build_Dir & Dir, Dir);
   --  For projects defined as *.gpr.in, we instead use:
   --     for Source_Dirs use (Common.Build_Dir & Dir, Common.Source_Dir & Dir);
   --  The latter is needed because the .gpr file will be in the build
   --  directory rather than the source directory.

   package Compiler is

      Base_Ada_Compiler_Switches :=
        ("-gnatf",            --  Full compiler error messages
         Config.Style_Switch, --  Enable style checks
         "-gnatwale");        --  Enable all warnings, also enable elaboration
                              --  warnings, and treat all warnings as errors.

      case Build is
         when "PRODUCTION" =>
            for Default_Switches ("Ada") use
               Base_Ada_Compiler_Switches &
                 ("-gnatp",  --  Suppress all checks
                  "-gnatn"); --  Enable inlining

         when "DEBUG" =>
            for Default_Switches ("Ada") use
               Base_Ada_Compiler_Switches &
                 ("-gnato",         --  Overflow checks
                  "-gnata",         --  Enable assertions
                  "-fstack-check"); --  Stack overflow checking

      end case;

   end Compiler;

end Common;
