#!/bin/sh
#
# $Id$
#
# This script performs all the necessary steps to transform a checked
# out copy of PolyORB into a source tree suitable for packaging.
#
# The file MANIFEST contains the list of files to be included in this
# archive, one file per line.
#

change=
with_doc=false

###################################################
# Usage information
###################################################

usage() {
   echo "Usage: $0 [-c CHANGE] [-V version] [-D] dir"
   echo "  -c  optional CM change identifier"
   echo "  -V  optional additional version identifier"
   echo "  -D  build documentation"
   exit 1
}

set -e

###################################################
# Parse commande line
###################################################

while getopts c:V:D opt; do
  case "$opt" in
    c) change="$OPTARG" ;;
    D) with_doc=true ;;
    V) additional_version="$OPTARG" ;;
    *) usage ;;
  esac
done

shift `expr $OPTIND - 1`

if [ $# != 1 ]; then
  usage
fi

dir=$1

cd $dir

rm -f MANIFEST.distrib

if [ ! -z "$change" ]; then
  taginfo="CHANGE_${change}"

  if [ ! -f "${taginfo}" ]; then
    LANG=C date "+Packaged from repository rev. ${change} on %c" > ${taginfo}
  fi
  echo ${taginfo} >> MANIFEST.distrib
fi

###################################################
# Update version in all files
###################################################

# sed_in_place FILE ARG...
# Apply "sed ARG..." transformation to FILE

sed_in_place() {
  oldfile=$1; shift
  newfile=$oldfile.new.$$
  sed "$@" < $oldfile > $newfile
  mv -f $newfile $oldfile
}

#
# Generate configure script
#

# Generate distrib.m4 to pass additional information related to packaged
# sources to autoconf.

(
# Switch default warnings mode to "n" (default is "e" when building from
# a checkout).

echo "define(DEFAULT_WARNINGS_MODE, [n])"

# Additional version information from the prepare_distrib command line
# (may be empty).

echo "define([ADDITIONAL_VERSION],[$additional_version])"

# Subversion revision information (optional)

if [ -n "$change" ]; then
  echo "define([DISTRIB_SVNREVISION],[${change}])"
fi

# Use MANIFEST to filter output files

echo "define([OUTPUT_FILTER],[MANIFEST])"
) > support/distrib.m4

echo support/distrib.m4 >> MANIFEST.distrib

echo Generating auto-generated files
sh support/reconfig -w

polyorb_version=`./configure --version | sed -n 's/^PolyORB configure //p'`
echo "Setting version: ${polyorb_version}"

for f in README VERSION; do
  sed_in_place $f "s/@polyorb_version@/${polyorb_version}/g"
done

###################################################
# Build documentation (optional)
###################################################

if $with_doc; then
  ./configure
  cd docs
  make
  cd ..
  sed 's#^#docs/#' < docs/MANIFEST >> MANIFEST.distrib
fi

echo 'Updating MANIFEST'
cat MANIFEST.distrib >> MANIFEST
utils/sort_MANIFEST

echo "Adapting modes"
chmod -R og=u-w .
