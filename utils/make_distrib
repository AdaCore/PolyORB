#!/bin/sh
#
# $Id: //droopi/main/utils/make_distrib#6 $
#
# This script builds a compressed archive suitable for distribution.
#
# Usage: make_distrib [-s] [-k?|-prcs|-n|-c] tag dir
#
#   -s    : suppress automatic version numbering and get info from VERSION.INFO
#   -k?   : override CVS keywords expansion
#   -prcs : use prcs to extract files
#   -n    : assume a checkout has already been done in dir
#   -c    : assume current directory can be used as source
#   tag   : CVS or prcs tag or branch
#   dir   : the distribution will unpack in directory <dir> and will be
#           named <dir>.tar.gz
#
# The VERSION.INFO file will be used to substitute some variables in files
# such as README, etc.
#
# The file MANIFEST contains the list of files to be included in this
# archive, one file per line.
#

if [ $# = 0 ]; then
   echo "Usage: $0 [-k|-prcs|-p4|-n|-c] tag dir";
   exit 0;
fi;

set -e

prcs=false
perforce=false
kk=
nocheckout=false
s=false

if test "x$1" = "x-s"; then
    s=true
    shift
fi

case $1 in
  -k*)   kk=$1; shift;;
  -prcs) prcs=true; shift;;
  -p4)   perforce=true; shift;;
  -n)    nocheckout=true; shift;;
  -c)    nocheckout=true; use_current=true; shift;;
  *)     ;;
esac
tag=$1
dir=$2
prev=`pwd`
tmp=${TMPDIR-/var/tmp}/make_distrib.$$
mkdir -p ${tmp}/${dir}
trap "rm -fr ${tmp}" 0
if $prcs; then
  name=`echo *.prj | sed -e 's/\.prj//'`
  echo Extracting module ${name} from prcs using tag ${tag}
  cd ${tmp}/${dir}
  prcs checkout -r${tag} ${name}
elif $perforce; then
  . ./${P4CONFIG:-.p4}
  export P4USER P4PORT P4PASSWD
  view=`p4 files MANIFEST | sed 's,/MANIFEST#.*$,/...,'`
  cd ${tmp}/${dir}
  tmp=`pwd`
  client=make_distrib_$$
  p4 client -i <<__EOF__
Client: $client
Root: ${tmp}
Options: allwrite clobber compress
View: ${view} //${client}/...
__EOF__
  P4CLIENT=${client}; export P4CLIENT
  set +e
  p4 sync ...@${tag}
  rc=$?
  set -e
  p4 client -d ${client}
  if [ $rc != 0 ]; then
    exit $rc
  fi
elif $usercurrent; then
  tar cf - . | (cd $tmp/$dir && tar xpBf -)
  cd $tmp/$dir
elif $nocheckout; then
  cd ${dir}
else
  root=`cat CVS/Root`
  trunc_root=`echo ${root} | sed -e 's/^.*://'`
  name=`sed -e "s,${trunc_root}/,," < CVS/Repository`
  echo Extracting module ${name} from ${root} using tag ${tag}
  cd ${tmp}
  cvs -d ${root} co ${kk} -r ${tag} -d ${dir} ${name}
  cd ${dir}
fi
if [ -f utils/VERSION.INFO ]; then
  echo "Calling version file, then deleting it"
  if $s; then
    echo "(with no implicit version information)"
    sh utils/VERSION.INFO
  else
    echo "(with version information derived from ${dir})"
    sh utils/VERSION.INFO ${dir}
  fi
  rm -f utils/VERSION.INFO
else
  echo "WARNING: unable to locate VERSION.INFO in directory utils"
fi
#if [ -f utils/mangle.sh ]; then
#  chmod 755 utils/mangle.sh
#  tm=/tmp/man$$
#  sed -ne '1,/BEGIN\]/p' < Dist/glade_version.txt > $tm.1
#  sed -ne '/END\]/,$p' < Dist/glade_version.txt > $tm.3
#  sed -e '1,/BEGIN\]/d' -e '/END\]/,$d' < Dist/glade_version.txt | \
#    utils/mangle.sh > $tm.2
#  cat $tm.1 $tm.2 $tm.3 > Dist/glade_version.txt
#  rm $tm.1 $tm.2 $tm.3
#else
#  echo "WARNING: unable to locate mangle.sh in directory utils"
#fi
#if [ -f ${prev}/utils/normalize.pl ]; then
#    echo Recentering keywords
#    ${prev}/utils/normalize.pl `cat MANIFEST`
#fi
echo Editing configure.in
mv configure.in configure.in.orig
awk '
  BEGIN { st = 0; nf = 0; }
  FILENAME == "MANIFEST" {
    manifest[nf++] = $0;
    next;
  }
  /^AC_CONFIG_FILES/ {
    st = 1; print; next;
  }
  st == 1 && /^\]/ {
    st = 0;
  }
  st == 1 {
    fn = $0;
    gsub (/[ 	]/,"", fn);
    for (j = 0; j < nf; j++) {
      if (manifest[j] == fn ".in") {
        print;
        break;
      }
    }
    next;
  }
  { print; }' MANIFEST configure.in.orig > configure.in
rm -f configure.in.orig

echo Generating auto-generated files
if [ -f support/reconfig ];then sh -e -x support/reconfig;fi
echo Doing the necessary date modifications
find . -name configure.in -exec touch {} \;
sleep 1
find . -name aclocal.m4 -exec touch {} \;
sleep 1
find . -name Makefile.in -exec touch {} \;
sleep 1
find . -name configure -exec touch {} \;
sleep 1
find . -name stamp-h.in -exec touch {} \;
sleep 1
find . -name config.h.in -exec touch {} \;
echo Adapting modes
chmod -R og=u-w .
flist=""
echo Packaging
for i in `cat MANIFEST`; do
  flist="${flist} ${dir}/${i}"
done
cd ..
tar cf ${dir}.tar ${flist}
gzip --best ${dir}.tar
ls -l ${dir}.tar.gz
mv ${dir}.tar.gz ${prev}
cd ${prev}
rm -rf ${tmp}
