AC_INIT(src/polyorb.ads)
AC_CONFIG_AUX_DIR(support)
#
# Initialization
#
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(polyorb,0.1)
LIBVERSIONINFO=0:0:0
AC_SUBST(LIBVERSIONINFO)
#
# XmlAda location
#
XMLADA_INCLUDE=""
XMLADA_LIBS=""
AC_MSG_CHECKING([XmlAda])
has_xmlada=no
AC_ARG_ENABLE(xmlada,
[  --enable-xmlada     Use XmlAda to build SOAP personality (no)],
[if xmlada-config --version | grep "^XmlAda" > /dev/null 2>&1; then
   XMLADA_INCLUDE="`xmlada-config --cflags`"
   XMLADA_LIBS="`xmlada-config --libs`"
   has_xmlada=yes
else
   has_xmlada="no (not found)"
fi],
[])
AM_CONDITIONAL(HAS_XMLADA, test x"$has_xmlada" = xyes)
AC_SUBST(XMLADA_INCLUDE)
AC_SUBST(XMLADA_LIBS)
AC_MSG_RESULT($has_xmlada)
#
# IR
#
AC_MSG_CHECKING([whether to build the Interface Repository])
ir_enabled=no
AC_ARG_ENABLE(ir,
[  --enable-ir             Build the Interface Repository (no)],
[ir_enabled=${enableval}])
AM_CONDITIONAL(ENABLE_IR, test x$ir_enabled = xyes)
AC_MSG_RESULT($enable_ir)
#
# Check for maintainer mode
#
AC_ARG_ENABLE(debug,
[  --enable-debug          Turn on debugging options],
[GNATFLAGS="-g -O2 -gnatfa -fstack-check -gnatoy -gnatwae -Wall"
 BARGS=-E
 debug=true],
[GNATFLAGS="-g -O2"
 BARGS=
 debug=false])
AC_SUBST(GNATFLAGS)
AC_SUBST(BARGS)
AM_CONDITIONAL(DEBUG, test x$debug = xtrue)
#
# Various programs
#
AC_PROG_CC
AC_PROG_INSTALL
AC_CHECK_PROG(RM, rm, rm)
AM_PROG_WORKING_ADA
AM_CROSS_PROG_WORKING_ADA
AC_EXEEXT
AC_CHECK_PROG(GNATMAKE, gnatmake, gnatmake)
AC_CHECK_PROG(GNATCHOP, gnatchop, gnatchop)
AC_CHECK_PROG(PYTHON, python, python)
AM_PROG_LIBTOOL
#
# Check that the GNAT version is recent enough for this version of GLADE
#
AM_ADA_PREREQ(20010503, 3.14a1)
#
# Output
#
AC_OUTPUT([Makefile
	   compilers/Makefile compilers/gnatprfh/Makefile
	   compilers/ciao/Makefile compilers/idlac/Makefile
	   compilers/idlac/testsuite/Makefile
	   compilers/idlac/platform.ads
	   src/Makefile src/corba/Makefile src/soap/Makefile src/moma/Makefile
	   idls/Makefile idls/cos/Makefile idls/cos/event/Makefile
	   idls/cos/naming/Makefile idls/cos/time/Makefile
	   cos/Makefile cos/event/Makefile cos/naming/Makefile
	   cos/time/Makefile cos/ir/Makefile
	   examples/Makefile examples/echo/Makefile examples/all_types/Makefile
	   examples/all_functions/Makefile examples/dsa/Makefile 
	   examples/moma/Makefile
	   support/adacompiler support/linker])

# src/polyorb-config
#
#
# Some files need to be copied verbatim from the source tree to the
# build directory (only necessary when source dir != build dir).
#
for a in src/gnat.adc
do
  if test ! -f "$a"
  then
    echo "creating $a"
    cp $srcdir/$a $a
  fi
done
for a in linker adacompiler
do
  chmod a+x support/$a
done
