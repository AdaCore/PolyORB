# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
ADA = @ADA@
AR = @AR@
AWK = @AWK@
CC = @CC@
CP_PRESERVE = @CP_PRESERVE@
DEFPROTOCOLDATA = @DEFPROTOCOLDATA@
DEFPROTOCOLNAME = @DEFPROTOCOLNAME@
DEFSTORAGEDATA = @DEFSTORAGEDATA@
DEFSTORAGENAME = @DEFSTORAGENAME@
EXEEXT = @EXEEXT@
EXTRA_LIBS = @EXTRA_LIBS@
FILTERSEXTRALIBS = @FILTERSEXTRALIBS@
FILTERSINSTALL = @FILTERSINSTALL@
FILTERSOBJECTS = @FILTERSOBJECTS@
FILTERSSOURCES = @FILTERSSOURCES@
GNATDISTOPT = @GNATDISTOPT@
GNATLS = @GNATLS@
GNAT_SOURCE = @GNAT_SOURCE@
ISTHRBIO = @ISTHRBIO@
LAUNCHING_INCLUDED = @LAUNCHING_INCLUDED@
LINKTEST = @LINKTEST@
MAKEINFO = @MAKEINFO@
PACKAGE = @PACKAGE@
PLATFORM_SPECIFIC = @PLATFORM_SPECIFIC@
PROTOCOLSOBJECTS = @PROTOCOLSOBJECTS@
PROTOCOLSSOURCES = @PROTOCOLSSOURCES@
PSNAME = @PSNAME@
RANLIB = @RANLIB@
RM = @RM@
RSH_CMD = @RSH_CMD@
RSH_OPT = @RSH_OPT@
SED = @SED@
SUPPORTS_LOCAL_LAUNCH = @SUPPORTS_LOCAL_LAUNCH@
S_GTPLSP_ADB = @S_GTPLSP_ADB@
S_GTPLSP_ADS = @S_GTPLSP_ADS@
TAR = @TAR@
TCP_INCLUDED = @TCP_INCLUDED@
TCP_PLATFORM_SOURCES = @TCP_PLATFORM_SOURCES@
UNZIP = @UNZIP@
VERSION = @VERSION@

AUTOMAKE_OPTIONS = no-dependencies foreign

ADA_FOR_TARGET = @ADA_FOR_TARGET@

CONSTANTS_SH = $(srcdir)/constants.sh
CP = cp
GARLIC = $(prefix)/lib/garlic
GNATFLAGS = -gnatg @GNATFLAGS@
INCFLAGS = -I. -I$(srcdir)

GNATMAKE = gnatmake
GNATBIND = gnatbind

PLATFORM = @PLATFORM_SPECIFIC@

CONSTANTS_PLATFORM = $(srcdir)/5$(PLATFORM)garcon.ads

LAUNCHINGOBJECTS =  s-gaplsp.o s-garnam.o s-garrem.o


LAUNCHINGSOURCES =            s-gaplsp.ads                        $(srcdir)/s-garnam.ads $(srcdir)/s-garnam.adb $(srcdir)/s-garrem.ads $(srcdir)/s-garrem.adb


TCPOBJECTS =  s-gtplsp.o s-gptcse.o s-gaprtc.o


TCPSOURCES =  $(TCP_PLATFORM_SOURCES)                                 s-gaprtc.ads           s-gaprtc.adb $(srcdir)/s-gptcse.ads $(srcdir)/s-gptcse.adb


NOBLTCPOBJECTS =  s-ganobl.o


NOBLTCPSOURCES =  $(srcdir)/s-ganobl.ads $(srcdir)/s-ganobl.adb


COMMONOBJECTS =  s-galiop.o s-ganata.o s-ganeut.o s-gaphlo.o s-gaprco.o s-gartas.o s-garcon.o s-gardeb.o s-garela.o s-garexc.o s-garfil.o s-gargro.o s-garhea.o s-garlic.o s-gardfs.o s-gaprre.o s-gprese.o s-garopt.o s-garpar.o s-garpri.o s-garpro.o s-garser.o s-garsta.o s-garstr.o s-gartab.o s-gartra.o s-garthi.o s-garter.o s-gartyp.o s-garuni.o s-garuti.o s-garsto.o s-gasoli.o s-gastco.o s-gatcop.o s-ganota.o s-parint.o s-rpc.o s-rpcser.o s-rpstio.o s-shamem.o s-stratt.o


COMMONSOURCES =            s-galiop.ads                        $(srcdir)/s-ganata.ads $(srcdir)/s-ganata.adb $(srcdir)/s-ganeut.ads $(srcdir)/s-ganeut.adb $(srcdir)/s-gaphlo.ads $(srcdir)/s-gaphlo.adb $(srcdir)/s-gaprco.ads           s-gaprco.adb $(srcdir)/s-gartas.ads $(srcdir)/s-gartas.adb           s-garcon.ads                        $(srcdir)/s-gardeb.ads $(srcdir)/s-gardeb.adb $(srcdir)/s-gardfs.ads $(srcdir)/s-gardfs.adb $(srcdir)/s-garfil.ads $(srcdir)/s-garfil.adb $(srcdir)/s-gargro.ads $(srcdir)/s-gargro.adb $(srcdir)/s-garhea.ads $(srcdir)/s-garhea.adb $(srcdir)/s-garlic.ads                        $(srcdir)/s-garopt.ads $(srcdir)/s-garopt.adb $(srcdir)/s-garpar.ads $(srcdir)/s-garpar.adb $(srcdir)/s-garpro.ads                        $(srcdir)/s-garpri.ads                        $(srcdir)/s-garpro.ads $(srcdir)/s-garpro.adb $(srcdir)/s-garexc.ads $(srcdir)/s-garexc.adb $(srcdir)/s-gaprre.ads $(srcdir)/s-gaprre.adb $(srcdir)/s-garser.ads           s-garser.adb $(srcdir)/s-garsta.ads $(srcdir)/s-garsta.adb $(srcdir)/s-garstr.ads $(srcdir)/s-garstr.adb $(srcdir)/s-garthi.ads $(srcdir)/s-garthi.adb $(srcdir)/s-gartra.ads $(srcdir)/s-gartra.adb $(srcdir)/s-garela.ads $(srcdir)/s-garela.adb $(srcdir)/s-gprese.ads                        $(srcdir)/s-gartab.ads $(srcdir)/s-gartab.adb $(srcdir)/s-garter.ads $(srcdir)/s-garter.adb $(srcdir)/s-gartyp.ads $(srcdir)/s-gartyp.adb $(srcdir)/s-garuni.ads $(srcdir)/s-garuni.adb $(srcdir)/s-garuti.ads $(srcdir)/s-garuti.adb $(srcdir)/s-garsto.ads $(srcdir)/s-garsto.adb $(srcdir)/s-gasoli.ads $(srcdir)/s-gasoli.adb $(srcdir)/s-gastco.ads $(srcdir)/s-gastco.adb $(srcdir)/s-ganota.ads $(srcdir)/s-ganota.adb $(srcdir)/s-gastha.ads $(srcdir)/s-gastha.adb           s-gatcop.ads                        $(srcdir)/s-parint.ads $(srcdir)/s-parint.adb $(srcdir)/s-rpc.ads    $(srcdir)/s-rpc.adb    $(srcdir)/s-rpcser.ads $(srcdir)/s-rpcser.adb $(srcdir)/s-rpstio.ads $(srcdir)/s-rpstio.adb $(srcdir)/s-shamem.ads $(srcdir)/s-shamem.adb $(srcdir)/s-stratt.adb


OBJECTS =  $(PROTOCOLSOBJECTS) @LAUNCHINGOBJECTS@ $(FILTERSOBJECTS) $(COMMONOBJECTS)


SOURCES =  $(PROTOCOLSSOURCES) @LAUNCHINGSOURCES@ $(FILTERSSOURCES) $(COMMONSOURCES)


CLEANFILES = *.ali *.o split b_*.c 	s-garser.adb s-gaplsp.ads s-gaprco.adb s-galiop.ads s-garcon.ads 	inlining gnatlib/* constants_nodef isthrbio$(EXEEXT) 	$(FILTERSOBJECTS)


DISTCLEANFILES = config.h $(TCP_PLATFORM_SOURCES) s-gatcop.ads 	Makefile.fil


SUFFIXES = .adb .ads .ali .o .xrb
mkinstalldirs = $(SHELL) $(top_srcdir)/support/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =  s-gaplsp.ads s-garser.adb
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  ./stamp-h.in ChangeLog Makefile.am Makefile.in TODO \
config.h.in s-gaplsp.ads.in s-garser.adb.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

GZIP_ENV = --best
all: all-redirect
.SUFFIXES:
.SUFFIXES: .adb .ads .ali .o .xrb
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --foreign Garlic/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


config.h: stamp-h
	@if test ! -f $@; then \
		rm -f stamp-h; \
		$(MAKE) stamp-h; \
	else :; fi
stamp-h: $(srcdir)/config.h.in $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES= CONFIG_HEADERS=Garlic/config.h \
	     $(SHELL) ./config.status
	@echo timestamp > stamp-h 2> /dev/null
$(srcdir)/config.h.in: $(srcdir)/stamp-h.in
	@if test ! -f $@; then \
		rm -f $(srcdir)/stamp-h.in; \
		$(MAKE) $(srcdir)/stamp-h.in; \
	else :; fi
$(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	@echo timestamp > $(srcdir)/stamp-h.in 2> /dev/null

mostlyclean-hdr:

clean-hdr:

distclean-hdr:
	-rm -f config.h

maintainer-clean-hdr:
s-gaplsp.ads: $(top_builddir)/config.status s-gaplsp.ads.in
	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
s-garser.adb: $(top_builddir)/config.status s-garser.adb.in
	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
tags: TAGS
TAGS:


distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = Garlic

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
all-recursive-am: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

install-exec-am:
install-exec: install-exec-am

install-data-am: install-data-local
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am:
uninstall: uninstall-am
all-am: Makefile config.h all-local
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-hdr mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-hdr clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-hdr distclean-generic clean-am

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-hdr maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-hdr distclean-hdr clean-hdr maintainer-clean-hdr \
tags distdir info-am info dvi-am dvi check check-am installcheck-am \
installcheck all-recursive-am install-exec-am install-exec \
install-data-local install-data-am install-data install-am install \
uninstall-am uninstall all-local all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


Makefile: Makefile.fil

@FILTERSMAKEFILE@

isthrbio$(EXEEXT): $(srcdir)/isthrbio.adb Makefile $(TCP_PLATFORM_SOURCES)
	$(GNATMAKE) -a $(CFLAGS) $(INCFLAGS) $(GNATFLAGS) -I$(srcdir) -I. \
		$(srcdir)/isthrbio.adb

s-gtplsp.o: $(TCP_PLATFORM_SOURCES)
	$(ADA_FOR_TARGET) -c $(CFLAGS) $(INCFLAGS) $(GNATFLAGS) \
		`echo $(TCP_PLATFORM_SOURCES) | $(SED) -e 's/ .*$$//'`

.adb.o:
	$(ADA_FOR_TARGET) -c $(CFLAGS) $(INCFLAGS) $(GNATFLAGS) $<

.ads.o:
	$(ADA_FOR_TARGET) -c $(CFLAGS) $(INCFLAGS) $(GNATFLAGS) $<

.adb.ali:
	$(ADA_FOR_TARGET) -c $(CFLAGS) $(INCFLAGS) $(GNATFLAGS) $<

.ads.ali:
	$(ADA_FOR_TARGET) -c $(CFLAGS) $(INCFLAGS) $(GNATFLAGS) $<

constants_nodef: $(srcdir)/constants.c config.h
	$(CC) -o constants_nodef -I. -UCONSTANT_NAME $(srcdir)/constants.c

b_gaprco$(EXEEXT): b_gaprco.adb
	@${GNATMAKE} b_gaprco -o b_gaprco$(EXEEXT)

s-gaprco.adb: b_gaprco$(EXEEXT)
	@b_gaprco$(EXEEXT) $(DEFPROTOCOLNAME) >s-gaprco.adb

s-garcon.ads: $(CONSTANTS_SH)
	if test -f $(CONSTANTS_PLATFORM); then\
	  cp $(CONSTANTS_PLATFORM) s-garcon.ads;\
	else\
	  $(MAKE) split constants_nodef config.h; \
	  $(SHELL) $(CONSTANTS_SH) System.Garlic.Constants $(srcdir);\
	fi

platformfile: $(CONSTANTS_SH) split constants_nodef config.h
	@echo Generating $(srcdir)/5$(PLATFORM_SPECIFIC)garcon.ads
	$(CONSTANTS_SH) $(srcdir)/5$(PLATFORM_SPECIFIC)garcon.ads \
		$(srcdir) "$(PSNAME)" garcon.txt
	@echo $(srcdir)/5$(PLATFORM_SPECIFIC)garcon.ads generated

s-galiop.ads:
	@echo "private package System.Garlic.Linker_Options is" >s-galiop.ads
	@echo "" >>s-galiop.ads
	@if [ "x$(EXTRA_LIBS)" != "x" ] ; then\
	 for option in `echo $(EXTRA_LIBS)`; do\
	  echo "   pragma Linker_Options (\"$$option\");" >>s-galiop.ads;\
	 done;\
	fi
	@echo "" >>s-galiop.ads
	@echo "end System.Garlic.Linker_Options;" >>s-galiop.ads

used:
	grep '^D ' `echo $(OBJECTS) | $(SED) -e 's/\.o/.ali/g'` |\
		$(SED) 's/^.*://g' | sort |\
		$(AWK) -f unitused.awk | sort -n >deps
	grep '^W ' `echo $(OBJECTS) | $(SED) -e 's/\.o/.ali/g'` |\
		$(SED) 's/^.*://g' | sort |\
		$(AWK) -f unitused.awk | sort -n >withs

# This one deserves some comment: the Makefile variable ISTHRBIO will
# be used to set the shell variable of the same name, whose value will
# in turn be used to create the s-gatcop.ads file. Modifying a shell
# variable implies that the whole rule stays in a single shell
# statement, hence the backslashed lines.

s-gatcop.ads: Makefile
	if test $(ISTHRBIO) = "test"; then \
	  $(MAKE) isthrbio$(EXEEXT); \
	  if ./isthrbio; then \
	    ISTHRBIO="no"; \
	  else \
	    ISTHRBIO="yes"; \
	  fi; \
        else \
	  ISTHRBIO=$(ISTHRBIO); \
	fi; \
	if test $$ISTHRBIO = "yes"; then \
	  S_GATCOP_SUBST="System.Garlic.Thin"; \
	else \
	  S_GATCOP_SUBST="System.Garlic.Non_Blocking"; \
	fi; \
	echo "with $$S_GATCOP_SUBST;" > s-gatcop.ads; \
	echo "package System.Garlic.TCP_Operations" >> s-gatcop.ads; \
	echo "  renames $$S_GATCOP_SUBST;" >> s-gatcop.ads

s-gatcop.o: $(srcdir)/s-garthi.ads $(srcdir)/s-ganobl.adb

$(TCP_PLATFORM_SOURCES): $(S_GTPLSP_ADS) $(S_GTPLSP_ADB)
	cp $(srcdir)/$(S_GTPLSP_ADS) s-gtplsp.ads
	@if test -n "$(S_GTPLSP_ADB)"; then \
	  cp $(srcdir)/$(S_GTPLSP_ADB) s-gtplsp.adb; \
	fi

split: $(srcdir)/split.adb
	$(GNATMAKE) -m -o split $(srcdir)/split.adb

all-local: $(SOURCES) $(OBJECTS) $(LINKTEST) $(FILTERSINSTALL)

install-dirs-local:
	-rm -rf $(GARLIC)
	-$(mkinstalldirs) $(GARLIC)
	@echo $(GARLIC) created

inlining: all-local
	@-if test ! -f inlining; then\
	   rm -rf gnatlib >/dev/null 2>&1;\
	   mkdir gnatlib >/dev/null 2>&1;\
	   gnatlibdir=`$(srcdir)/../Dist/config.sdefault pathtolib`;\
	   for o in `cd $$gnatlibdir && echo *.ali`; do\
	     grep "D s-stratt.adb" $$gnatlibdir/$$o /dev/null;\
	   done | $(SED) 's,^.*[/]\(.*\)\.ali:.*$$,\1.o,g' > gnatlib/tocheck;\
	   for i in $(OBJECTS); do\
	      cat gnatlib/tocheck > gnatlib/tocheck.tmp;\
	      grep -v $$i gnatlib/tocheck.tmp > gnatlib/tocheck;\
	   done;\
	   if test -s gnatlib/tocheck; then\
	      echo go > inlining;\
	   else\
	      echo no > inlining;\
	   fi;\
	fi
	@-if test `cat inlining` = "go"; then\
	   for o in `cat gnatlib/tocheck`; do\
	      if [ ! -f gnatlib/$$o ]; then\
	          s=`gnatls -a -s $$o | sed 's/\013//g'`;\
	          echo\
                    "$(ADA_FOR_TARGET) -c $(CFLAGS) $(GNATFLAGS) -I. -I- $$s"\
	            "-o gnatlib/$$o";\
	          $(ADA_FOR_TARGET) -c $(CFLAGS) $(GNATFLAGS) -I. -I-\
                    $$s -o gnatlib/$$o;\
	          if test $$? = 0; then\
	             echo $$o >>gnatlib/rebuild;\
	          else\
	             $(RM) -f gnatlib/tocheck;\
	             break;\
	          fi;\
	      fi;\
	   done;\
	   echo yes > inlining;\
	fi

linktest: $(srcdir)/linktest.adb $(OBJECTS)
	$(GNATMAKE) -c -a -m -I$(srcdir) -I. $(srcdir)/linktest.adb
	$(GNATBIND) $(srcdir)/linktest.ali -I. -I$(srcdir)

install-extra-libs: $(FILTERSEXTRALIBS) inlining install-dirs-local

install-data-local: all-local install-dirs-local install-extra-libs 
	@if test ! -f inlining; then\
	   exit 1;\
	fi
	@-for lib in libgnat.a libgnarl.a libAtasking.a libPtasking.a; do \
	  pathtolib=`$(srcdir)/../Dist/config.sdefault pathtolib`;\
	  if test -f $$pathtolib$$lib; then \
	    $(CP)  $$pathtolib$$lib $(GARLIC)/$$lib;\
	    chmod u+w $(GARLIC)/$$lib;\
	    $(AR) d $(GARLIC)/$$lib s-stratt.o \
	                            s-rpc.o \
	                            s-shamem.o \
	                            s-parint.o 2>/dev/null;\
	    if test `cat inlining` = "yes"; then\
	      (cd gnatlib;\
	       for o in `cat rebuild`; do \
		 $(AR) d $(GARLIC)/$$lib $$o 2>/dev/null;\
		 if test $$? = 0; then \
		   $(AR) cq $(GARLIC)/$$lib $$o;\
	           echo Replace inlined $$o in $$lib;\
	         fi;\
	       done);\
	    fi;\
	    $(RANLIB) $(GARLIC)/$$lib;\
	  fi;\
	done
	@if test `cat inlining` = "yes"; then\
	  (cd gnatlib;\
	   $(CP) $(CP_PRESERVE) `$(SED) 's/\.o/.ali/g' rebuild` $(GARLIC));\
	fi
	for i in $(SOURCES)\
		`echo $(OBJECTS) | $(SED) -e 's/\.o/.ali/g'`; do\
		if test -f $$i; then\
			$(CP) $(CP_PRESERVE) $$i $(GARLIC)/;\
		fi;\
	done
	$(AR) cq $(GARLIC)/libgarlic.a $(OBJECTS)
	$(RANLIB) $(GARLIC)/libgarlic.a
	chmod a+r $(GARLIC)/*
	chmod a-w $(GARLIC)/*

# Dependencies

depend: $(SOURCES)
	$(MAKE)
	$(srcdir)/mkdep
	$(MAKE) Makefile

###
### The following section is valid only for developpers that use the
### --enable-debug flag on configure. If you want to make modifications
### outside the development mode, you need to either update the following
### dependencies or to use the "fast" target.
###
### DO NOT REMOVE THIS LINE, IT IS USED BY MAKEDEPEND ###

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
