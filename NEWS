Changes since GLADE 1.03
========================

New Functionnalities
--------------------

  * RACW in Remote_Types
    It is now possible to declare remote access to class-wide types in 
    Remote_Types packages (this was already possible in
    Remote_Call_Interface packages). This makes it possible to have a
    reference to a remote object stored in another remote object and
    to create complex data structures involving several partitions at
    the same time.

  * Generic RCI packages
    GLADE now supports generic RCI packages. The pragma
    Remote_Call_Interface must be applied on both the generic package
    and the instantiation.

  * New stubs compilation model
    GNAT does not generate plain Ada stubs anymore but generates
    object file directly instead. GNATDIST takes advantages from this
    and compilation times are reduced by an important factor for
    distributed programs that contain a lot of RCI packages. This
    justifies the new major number for GLADE, which gets bumped to
    version 2.01.

  * Parallel compilation
    GNATDIST now partially supports the -jN flag, where N is the
    maximum number of processes to launch at the same time (the
    default being one). This option is useful for multiprocessor
    machines or in case of slow disk I/O (the unused CPU time caused
    by the fact that some data is yet unavailable may be used by
    another compilation).
    This support is not yet complete and is used only by the build of
    the non-distributed application.

  * Streams pool
    The internal mechanism to allocate streams has been enhanced to
    prevent stack blowups for large data. Dynamic allocation of small
    streams is avoided using pre-allocated chunks of memory through
    Ada95 storage pools.

  * Filters interface change
    The filtering interface uses access types rather than arrays to
    avoid blowing-up the stack when using large data.

  * New stream allocation policy
    Small streams are automatically selected from a pre-allocated
    chunk of memory, while big streams are created on the heap to
    prevent stack blowups.

Bug fixes
---------

  * Remote access to subprogram now work correctly

  * Remote access to class-wide types holding a null value can now be
    compared to null successfully.

  * Comparisons between remote access to class-wide types values now work

  * GLADE now supports RACW whose designated type has primitive
    operations with controlling arguments that are not of access mode.

  * No more Storage_Size pragmas are needed on user tasks

  * GNATDIST now checks that RCI children of a RCI package are configured
    on the same partition.

Misc
----

  * Less tasks are created by the partition communication subsystem

  * Adapted for use with the GNU libc under Linux

Changes since GLADE 1.02
========================

New Functionnalities
--------------------

  * Local launching
    If the host on which a partition must be launched is detected as
    being the same as localhost (same official name or name
    "localhost"), then rsh is not used any more and partitions are
    launched using system().

  * Light PCS
    If a partition does not contain any RCI body and does not have the 
    possibility of defining local RACW entities, then no anonymous
    task is ever started, in order to avoid creating tasks which will
    never be used.

  * Task pools
    Up to GLADE 1.02, a new task was created for each incoming
    request. Now, tasks are reused and are pre-created using a
    low-priority background allocator to allow requests to be served
    sooner. The number of awaiting tasks is configurable through
    GNATDIST configuration files on a per-partition basis or system-wide.

  * Informative exception messages
    When the TCP module fails, the errno return code is stored in the
    exception message to allow easier debugging.

  * gnat.adc
    gnatdist handles gnat.adc.

  * Version checks
    If a RCI version id is a blank string, then the version check is
    always considered as true.

New Ports
---------

  * Digital Unix
    GLADE now works correctly on Digital Unix. Heterogeneous
    distribution involving Digital Unix platforms is not yet
    supported. Compilation must use -O0 instead of -O2 to prevent a
    bug at runtime. The zlib library seems to be broken on Digital
    Unix. Therefore, the zip filter is not available.

Misc
----

  * Various code cleanups.

Changes since GLADE 1.01
========================

New Functionnalities
--------------------

  * Filters. 
    A filter is a set of subprograms which will be called
    automatically before sending bytes on the communication channel
    and after receiving them. An example (the ZIP filter) is bundled
    and installed along with GLADE, which uses the zlib library.
    There are new pragmas and attributes in GNATDIST to use this
    feature.

  * Trace and Replay
    It is possible to pass two new predefined arguments --trace and
    --replay to a partition. In tracing mode, network inputs and
    outputs are logged in such a way that when the partition
    executable is invoked with arguments --replay, inputs and outputs
    are read from the log files. Therefore, you can easily debug your
    distributed application without any non-deterministic side
    effects.

Examples
---------

   * LightBank 
     It is a simple example of client/server application written in
     Ada 95 and Annex E. Shows in particular how a simple partition
     (the client) can be duplicated at will. 

   * Bank 
     A more sophisticated example on the same theme. It demonstrates 
     distributed objects and filtering.

Bug fixes
---------

   * Float transmissions between different architectures with
     different word sizes now work.

   * Pathological cases in GNATDIST.

Misc
----

   * Copies of buffers have been suppressed wherever possible, thus
     decreasing execution time.

   * The 'rsh' command can now be changed at installation time using the
      --with-remsh parameter of configure (in preparation for HP support)

   * Upgraded to automake 1.1n. If the user does modifies sensitive files 
     (such as Makefile.am) and does not have automake, then print a
     message instead of crashing with an unclear error.

   * Reorganisation of GNATDIST directory hierarchy.

   * Clearer error messages for GNATDIST.

   * New file NEWS (this file).

# Local Variables:
# mode: text
# End:
