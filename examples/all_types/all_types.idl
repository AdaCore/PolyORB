interface all_types {

  // simple types
  //-------------
  boolean echoBoolean(in boolean arg) ;
  short echoShort(in short arg) ;
  long echoLong(in long arg) ;
  unsigned short echoUShort(in unsigned short arg) ;
  unsigned long echoULong(in unsigned long arg) ;
  float echoFloat(in float arg) ;
  double echoDouble(in double arg) ;
  char echoChar(in char arg) ;
  octet echoOctet (in octet arg) ;
  string echoString (in string arg) ;

  // Exceptions
  //-----------
  exception simple_exception {};
  exception complexe_exception {long excep;};

  void simple_exception_test () raises (simple_exception);
  void complexe_exception_test () raises (complexe_exception);


  // Unions
  //-------
  union example switch (long) {
    case 1: long Counter;
    case 2: boolean Flags;
    default: long Unknown;
  };

  example echo1 (in example arg);


  // Structs
  //--------
  struct simple_struct {
      long a[10];
      long b;
  };

  simple_struct echo2 (in simple_struct arg);


  // Enum
  //-----
  enum Color { Red, Green, Blue };

  Color echo3 (in Color arg);


  // Strings
  //--------
  typedef string U_string;
//  typedef string<30> B_string;

  U_string echo4 (in U_string arg);
//  B_string echo5 (in B_string arg);


  // Sequences
  //----------
  typedef sequence<short> U_sequence;
  typedef sequence<long,512> B_sequence;

  U_sequence echo6 (in U_sequence arg);
  B_sequence echo7 (in B_sequence arg);


  // Attributes
  //-----------
  readonly attribute Color R_attribute;
  attribute example N_attribute;

};
