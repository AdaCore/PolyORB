Announcing the release of PolyORB 1.0a
======================================

Ada Core Technologies and ACT Europe announce the first supported
release of PolyORB, PolyORB 1.0a.

This contains a CORBA-compliant instantiation of the PolyORB generic
middleware. It includes:
- an IDL to Ada 95 compiler,
- Portable Object Adapter (POA),
Dynamic Skeleton Interface (DSI),
Dynamic Invocation Interface (DII), and
Interface Repository (IR) implementations,
- COS Naming, COS Event and COS Time services implementations,
- GIOP 1.0, 1.1, and 1.2 implementations.

This CORBA implementation can be configured for full tasking,
Ravenscar tasking or no tasking runtime, depending on the level
of desired functionality for the application, and on the resource
constraints for the target.

This release should be considered as a stable implementation of
CORBA middleware over PolyORB.

----------------------------------------------------------------------

Announcing the release of PolyORB 0.1
=====================================

We have the pleasure to announce the first public release of our
schizophrenic object-oriented middleware:

                            PolyORB 0.1

>From the README file:

PolyORB is a polymorphic, reusable infrastructure for building
object-oriented distributed systems.  Middleware environments are
software libraries that hide the complex issues of distribution
and provide the programmer with high-level abstractions that allow
easy and transparent construction of distributed applications.
A number of different standards exist for creating object-oriented
distributed applications.  These standards define two things:

    * the interface seen by the developer's applicative objects;
    * the protocol used by the middleware environment to talk to other
      nodes in the distributed application.

Usually, middleware for one platform supports only one set of
such interfaces, and cannot interoperate with other platforms.

A polymorphic middleware allows the existence of several different
implementations of each of these aspects to be used within the same
middleware framework.  In addition, PolyORB allows such different
personalities to coexist in the same instance of the running middleware;
it decouples the personality presented to applications on one side
("application personality"), and the personality presented
to other middlewares on the other side ("protocol personality").
Multiple implementations of each personalisable aspect can
coexist within the same instance of the running middleware:
unlike previous generic middlewares, PolyORB is actually schizophrenic.

The decoupling of application and protocol personalities, and the support
for multiple simultaneous personalities within the same running middleware
are key features required for the construction of interoperable
distributed applications.  This allows PolyORB to communicate
with middlewares that implement different distribution standards:
PolyORB provides middleware-to-middleware interoperability.

The PolyORB architecture also permits the automatic,
just-in-time creation of proxies between incompatible environments
(although this feature is not implemented yet).

Note:  PolyORB is the project formerly known as DROOPI,
a Distributed Reusable Object-Oriented Polymorphic Infrastructure.

The PolyORB distribution and further information (including several
research papers related to PolyORB) can be found
at the project home page:
  http://libre.act-europe.fr/polyorb/
