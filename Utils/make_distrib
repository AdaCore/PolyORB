#!/bin/sh
#
# $Id$
#
# This script builds a compressed archive suitable for distribution.
#
# Usage: make_distrib [-k?|-prcs] tag dir
#
#   -k?   : override CVS keywords expansion
#   -prcs : use prcs to extract files
#   tag   : CVS or prcs tag or branch
#   dir   : the distribution will unpack in directory <dir> and will be
#           named <dir>.tar.gz
#
# The VERSION.INFO file will be used to substitute some variables in files
# such as README, etc.
#
# Also, the Dist/glade_version.txt file will be filled with version
# information that will be useful in case of bug reports. With prcs, only
# the project version needs to be stored, while with CVS all the revision
# information needs to be stored.
#
# The file MANIFEST contains the list of files to be included in this
# archive, one file per line.
#

if [ $# = 0 ]; then
   echo "Usage: $0 [-k|-prcs] tag dir";
   exit 0;
fi;

prcs=false
kk=

case $1 in
  -k*)   kk=$1; shift;;
  -prcs) prcs=true; shift;;
  *)     ;;
esac
tag=$1
dir=$2
prev=`pwd`
tmp=/tmp/t$$
mkdir ${tmp}
if $prcs; then
  name=`echo *.prj | sed -e 's/\.prj//'`
  echo Extracting module ${name} from prcs using tag ${tag}
  cd ${tmp}
  mkdir ${dir}
  cd ${dir}
  prcs checkout -r${tag} ${name}
else
  root=`cat CVS/Root`
  name=`sed -e "s,${root}/,," < CVS/Repository`
  echo Extracting module ${name} from ${root} using tag ${tag}
  cd ${tmp}
  cvs -d ${root} co ${kk} -r ${tag} -d ${dir} ${name}
  cd ${dir}
fi
if [ -f Dist/glade_version.txt ]; then
  echo "Completing glade_version.txt with useful information"
  sed -e '/\[DEVELOPMENT VERSION\]/,$d' < Dist/glade_version.txt > GVT
  rm -f Dist/glade_version.txt && mv GVT Dist/glade_version.txt
  echo "[GLADE VERSION INFORMATION -- BEGIN]" >> Dist/glade_version.txt
  echo "GLADE @glade_version@ for GNAT @gnat_version@" \
    >> Dist/glade_version.txt
  echo "Built by `whoami` on `hostname` (`date`)" >> Dist/glade_version.txt
  echo "Tag: $tag" >> Dist/glade_version.txt
  echo >> Dist/glade_version.txt
  if $prcs; then
    echo "PRCS information:" >> Dist/glade_version.txt
    echo "   \$ProjectHeader$" >> Dist/glade_version.txt
    prcs rekey *.prj Dist/glade_version.txt
  else
    echo "CVS root: `cat CVS/Root`" >> Dist/glade_version.txt
    echo "CVS repository: `cat CVS/Repository`" >> Dist/glade_version.txt
    echo "CVS information:" >> Dist/glade_version.txt
    find . -type f -print | xargs grep "\$Revision$" >> Dist/glade_version.txt
  fi
  echo "[GLADE VERSION INFORMATION -- END]" >> Dist/glade_version.txt
else
  echo "WARNING: unable to locate glade_version.txt in directory Dist"
fi
if [ -f Utils/VERSION.INFO ]; then
  echo "Sourcing version file, then deleting it"
  . Utils/VERSION.INFO
  rm -f Utils/VERSION.INFO
else
  echo "WARNING: unable to locate VERSION.INFO in directory Utils"
fi
if [ -f Utils/mangle.sh ]; then
  tm=/tmp/man$$
  sed -ne '1,/BEGIN\]/p' < Dist/glade_version.txt > $tm.1
  sed -ne '/END\]/,$p' < Dist/glade_version.txt > $tm.3
  sed -e '1,/BEGIN\]/d' -e '/END\]/,$d' < Dist/glade_version.txt | \
    Utils/mangle.sh > $tm.2
  cat $tm.1 $tm.2 $tm.3 > Dist/glade_version.txt
  rm $tm.1 $tm.2 $tm.3
else
  echo "WARNING: unable to locate mangle.sh in directory Utils"
fi
if [ -f ${prev}/Utils/normalize.pl ]; then
    echo Recentering keywords
    find . -type f -print | xargs ${prev}/Utils/normalize.pl
fi
echo Doing the necessary date modifications
find . -name configure.in -exec touch {} \;
sleep 1
find . -name aclocal.m4 -exec touch {} \;
sleep 1
find . -name Makefile.in -exec touch {} \;
sleep 1
find . -name configure -exec touch {} \;
sleep 1
echo Adapting modes
chmod -R og=u-w .
flist=""
echo Packaging
for i in `cat MANIFEST`; do
  flist="${flist} ${dir}/${i}"
done
cd ..
tar cvf ${dir}.tar ${flist}
gzip --best ${dir}.tar
mv ${dir}.tar.gz ${prev}
cd ${prev}
rm -rf ${tmp}
