#!/bin/sh
#
# $Id$
#
# This script builds a distribution. The only parameter is the name
# of the distribution (.tar.gz will be appened). Only files tagged with
# the 'to_be_released' will be included into the release.
#
# A special case is the VERSION.INFO file, which has to be tagged
# to_be_released, but will NOT be released. In contains shell functions
# which will be sourced in order to perform the real distribution.
#

if [ $# = 0 ]; then
   echo "Usage: $0 [-k|-prcs] tag dir";
   exit 0;
fi;

prcs=false
kk=

case $1 in
  -k*)   kk=$1; shift;;
  -prcs) prcs=true; shift;;
  *)     ;;
esac
tag=$1
dir=$2
prev=`pwd`
tmp=/tmp/t$$
mkdir ${tmp}
if $prcs; then
  name=`echo *.prj | sed -e 's/\.prj//'`
  echo Extracting module ${name} from prcs using tag ${tag}
  cd ${tmp}
  mkdir ${dir}
  cd ${dir}
  prcs checkout -r${tag} ${name}
else
  root=`cat CVS/Root`
  name=`sed -e "s,${root}/,," < CVS/Repository`
  echo Extracting module ${name} from ${root} using tag ${tag}
  cd ${tmp}
  cvs -d ${root} co ${kk} -r ${tag} -d ${dir} ${name}
  cd ${dir}
fi
if [ -f Utils/VERSION.INFO ]; then
  echo "Sourcing version file, then deleting it"
  . Utils/VERSION.INFO
  rm -f Utils/VERSION.INFO
fi
echo Doing the necessary date modifications
find . -name configure.in -exec touch {} \;
sleep 1
find . -name aclocal.m4 -exec touch {} \;
sleep 1
find . -name Makefile.in -exec touch {} \;
sleep 1
find . -name configure -exec touch {} \;
sleep 1
echo Adapting modes
chmod -R og=u-w .
flist=""
echo Packaging
for i in `cat MANIFEST`; do
  flist="${flist} ${dir}/${i}"
done
cd ..
tar cvf ${dir}.tar ${flist}
gzip --best ${dir}.tar
mv ${dir}.tar.gz ${prev}
cd ${prev}
rm -rf ${tmp}
