------------------------------------------------------------------------------
--                                                                          --
--                           POLYORB COMPONENTS                             --
--                                                                          --
--                POLYORB.POA_POLICIES.ID_ASSIGNMENT_POLICY                 --
--                                                                          --
--                                 S p e c                                  --
--                                                                          --
--                Copyright (C) 2001 Free Software Fundation                --
--                                                                          --
-- PolyORB is free software; you  can  redistribute  it and/or modify it    --
-- under terms of the  GNU General Public License as published by the  Free --
-- Software Foundation;  either version 2,  or (at your option)  any  later --
-- version. PolyORB is distributed  in the hope that it will be  useful,    --
-- but WITHOUT ANY WARRANTY;  without even the implied warranty of MERCHAN- --
-- TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public --
-- License  for more details.  You should have received  a copy of the GNU  --
-- General Public License distributed with PolyORB; see file COPYING. If    --
-- not, write to the Free Software Foundation, 59 Temple Place - Suite 330, --
-- Boston, MA 02111-1307, USA.                                              --
--                                                                          --
-- As a special exception,  if other files  instantiate  generics from this --
-- unit, or you link  this unit with other files  to produce an executable, --
-- this  unit  does not  by itself cause  the resulting  executable  to  be --
-- covered  by the  GNU  General  Public  License.  This exception does not --
-- however invalidate  any other reasons why  the executable file  might be --
-- covered by the  GNU Public License.                                      --
--                                                                          --
--              PolyORB is maintained by ENST Paris University.             --
--                                                                          --
------------------------------------------------------------------------------

--  $Id$

with PolyORB.POA_Types;     use PolyORB.POA_Types;

package PolyORB.POA_Policies.Id_Assignment_Policy is

   type IdAssignmentPolicy is abstract new Policy with null record;
   subtype Id_Assignment_Policy is IdAssignmentPolicy;
   type IdAssignmentPolicy_Access is access all IdAssignmentPolicy'Class;
   subtype Id_Assignment_Policy_Access is IdAssignmentPolicy_Access;

   function Create return IdAssignmentPolicy_Access is abstract;
   --  The real creation function that has to be implemented for each
   --  possible Policy

   function Is_System (P : IdAssignmentPolicy) return Boolean
      is abstract;
   --  Checks if the current policy is able to create ObjectIds
   --  (System_Id policy)

   function Activate_Object
     (Self   : IdAssignmentPolicy;
      OA     : PolyORB.POA_Types.Obj_Adapter_Access;
      Object : Servant_Access) return Object_Id_Access
      is abstract;
   --  Add an object to the Active Object Map, and return a
   --  new Object_Id.

   procedure Activate_Object_With_Id
     (Self   : IdAssignmentPolicy;
      OA     : PolyORB.POA_Types.Obj_Adapter_Access;
      Object : Servant_Access;
      Oid    : Object_Id)
      is abstract;
   --  Add an object to the Active Object Map, and return a
   --  new Object_Id.

   procedure Ensure_Oid_Origin
     (Self  : IdAssignmentPolicy;
      U_Oid : Unmarshalled_Oid_Access)
      is abstract;
   --  Checks if the given Oid has been generated by the system
   --  Case SYSTEM_ID:
   --    raise the Bad_Param exception is the Object_Id has been
   --    generated by the user
   --  Case USER_ID:
   --    does nothing;

   procedure Ensure_Oid_Uniqueness
     (Self  : IdAssignmentPolicy;
      OA    : PolyORB.POA_Types.Obj_Adapter_Access;
      U_Oid : Unmarshalled_Oid_Access)
      is abstract;
   --  Checks if the Object_Id is not yet in use.
   --  Case SYSTEM_ID:
   --    Checks that the element in the map whose index is the Id
   --    is free.
   --  Case USER_ID:
   --    Loop through the map to check that the U_Oid is not yet used

   procedure Remove_Entry
     (Self  : IdAssignmentPolicy;
      OA    : PolyORB.POA_Types.Obj_Adapter_Access;
      U_Oid : Unmarshalled_Oid_Access)
      is abstract;
   --  Removes an entry from the Active Object Map

   function Id_To_Servant (Self  : IdAssignmentPolicy;
                           OA    : PolyORB.POA_Types.Obj_Adapter_Access;
                           U_Oid : Unmarshalled_Oid_Access)
                          return Servant_Access
      is abstract;
   --  Look in the Active Object Map for the given U_Oid. If found,
   --  returns the associated Servant. Otherwise, returns null.

   procedure Free
     (P   : in     IdAssignmentPolicy;
      Ptr : in out Policy_Access) is abstract;

end PolyORB.POA_Policies.Id_Assignment_Policy;
