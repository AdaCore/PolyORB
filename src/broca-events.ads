------------------------------------------------------------------------------
--                                                                          --
--                          ADABROKER COMPONENTS                            --
--                                                                          --
--                         B R O C A . E V E N T S                          --
--                                                                          --
--                                 S p e c                                  --
--                                                                          --
--          Copyright (C) 1999-2000 ENST Paris University, France.          --
--                                                                          --
-- AdaBroker is free software; you  can  redistribute  it and/or modify it  --
-- under terms of the  GNU General Public License as published by the  Free --
-- Software Foundation;  either version 2,  or (at your option)  any  later --
-- version. AdaBroker  is distributed  in the hope that it will be  useful, --
-- but WITHOUT ANY WARRANTY;  without even the implied warranty of MERCHAN- --
-- TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public --
-- License  for more details.  You should have received  a copy of the GNU  --
-- General Public License distributed with AdaBroker; see file COPYING. If  --
-- not, write to the Free Software Foundation, 59 Temple Place - Suite 330, --
-- Boston, MA 02111-1307, USA.                                              --
--                                                                          --
-- As a special exception,  if other files  instantiate  generics from this --
-- unit, or you link  this unit with other files  to produce an executable, --
-- this  unit  does not  by itself cause  the resulting  executable  to  be --
-- covered  by the  GNU  General  Public  License.  This exception does not --
-- however invalidate  any other reasons why  the executable file  might be --
-- covered by the  GNU Public License.                                      --
--                                                                          --
--             AdaBroker is maintained by ENST Paris University.            --
--                     (email: broker@inf.enst.fr)                          --
--                                                                          --
------------------------------------------------------------------------------

--  This package defines the abstract interface for an asynchronous event
--  management and queuing machinery.

--  This machinery must support several kinds of events:
--    - asynchronous communication events (e.g. file descriptor
--      events /à la/ poll(2));
--    - synchronous events generated by the application.

package Broca.Events is

   pragma Preelaborate;

   --------------
   -- An event --
   --------------

   type Event is abstract tagged private;

   procedure Process
     (E : in out Event)
     is abstract;
   --  Execute any work constituting the handling of E.

   type Null_Event is new Event with private;
   --  A null event.

   procedure Process (E : in out Null_Event);
   --  Do nothing.

   -------------------------------------------
   -- An asynchronous blocking event source --
   -------------------------------------------

   --  An implementation of an Asynchronous_Event_Source might
   --  be a set of UNIX file descriptors consulted through poll(2).

   type Asynchronous_Event_Source is abstract tagged limited private;
   type Asynchronous_Event_Source_Ptr is
     access all Asynchronous_Event_Source'Class;

   function Poll
     (AS : Asynchronous_Event_Source)
     return Event'Class is abstract;
   --  Wait for asynchronous event from AS, and return the event.
   --  If no event happens but waiting tasks are requested to
   --  proceed (by a call to Wakeup), then a Null_Event is returned.

   procedure Wakeup (AS : Asynchronous_Event_Source) is abstract;
   --  Wake up any task currently waiting for an event on AS.

   ----------------------
   -- An event manager --
   ----------------------

   type Event_Manager is abstract tagged limited private;

   procedure Link_Source
     (M  : access Event_Manager;
      AS : Asynchronous_Event_Source_Ptr);
   --  Link asynchronous source AS to manager M.
   --  Only one asynchronous event source may be linked to
   --  any manager at a given time. If an event source is currently
   --  linked with M, it will be unlinked.

   procedure Unlink_Source
     (M : access Event_Manager);
   --  Unlink any asynchronous event source associated with M.

   procedure Put
     (M : access Event_Manager;
      E : Event'Class) is abstract;
   --  Create a synchronous event for processing by M.

   function Fetch
     (M : access Event_Manager)
     return Event'Class is abstract;
   --  Retrieve an event from M, blocking if none is available.

private

   type Event is abstract tagged null record;

   type Null_Event is new Event with null record;

   type Asynchronous_Event_Source is abstract tagged limited null record;

   type Event_Manager is abstract tagged limited record
      Asynch_Source : Asynchronous_Event_Source_Ptr;
   end record;

end Broca.Events;
